
package sirh;

import java.awt.Image;
import java.net.MalformedURLException;
import java.text.*;
import java.util.*;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class TrabaConsola extends javax.swing.JFrame {


    public TrabaConsola() throws MalformedURLException {
        initComponents();
        setResizable(false);
        setDefaultCloseOperation(0);
        Iniciar();
    }

    private void Iniciar() throws MalformedURLException{
        numtra.setText("0");
        rfc.setText("");
        curp.setText("");
        fsta.setDate(null);
        paterno.setText("");
        materno.setText("");
        nombre.setText("");
        path.setText("FTP://SIRH.DYNDNS.ORG/TRABAJADORES/SINFOTO.GIF");
        nacim.setDate(null);
        fing.setDate(null);
        fpla.setDate(null);
        fult.setDate(null);
        frei.setDate(null);
        observa.setText("");
        String lugarImagen="";
        lugarImagen=path.getText();
        Image icon=new javax.swing.ImageIcon(new URL(lugarImagen)).getImage().getScaledInstance(txtImagen.getWidth(), txtImagen.getWidth(), Image.SCALE_DEFAULT);
        Icon imagen=new ImageIcon(icon);
        txtImagen.setIcon(imagen);
        statra.removeAllItems();
        statra.addItem("");
        Traba e=new Traba();
        e.LlenarStatus(statra);
        sexo.removeAllItems();
        sexo.addItem("");
        Traba e1=new Traba();
        e1.LlenarSexo(sexo);
        nacion.removeAllItems();
        nacion.addItem("");
        Traba e2=new Traba();
        e2.LlenarNacion(nacion);
        crear.setEnabled(true);
        numtra.setEnabled(true);
        numtra.grabFocus();
       
        fecha.setText(fechaActual());
        usuario.setText(Acceso.getClaveUsuario());
        txtNombre.setText(Acceso.getNombreUsuario());
        txtEmpresa.setText(Acceso.getEmpresaUsuario());
    }
    
    public static String fechaActual(){
        Date fecha= new Date();
        SimpleDateFormat formatoFecha=new SimpleDateFormat("dd/MM/YYYY HH:mm:ss");
        return formatoFecha.format(fecha);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        numtra = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rfc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        curp = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        statra = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        fsta = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        paterno = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        materno = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        path = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        nacim = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        sexo = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        nacion = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        fing = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        fpla = new com.toedter.calendar.JDateChooser();
        jLabel17 = new javax.swing.JLabel();
        fult = new com.toedter.calendar.JDateChooser();
        jLabel18 = new javax.swing.JLabel();
        frei = new com.toedter.calendar.JDateChooser();
        jLabel19 = new javax.swing.JLabel();
        observa = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        fecha = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        usuario = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        datper = new javax.swing.JButton();
        documenta = new javax.swing.JButton();
        escolar = new javax.swing.JButton();
        familiar = new javax.swing.JButton();
        exper = new javax.swing.JButton();
        benefi = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtImagen = new javax.swing.JLabel();
        crear = new javax.swing.JButton();
        actualizar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtEmpresa = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SNTIAISCRM Sistema de Recursos Humanos");
        setMaximumSize(new java.awt.Dimension(654, 608));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel3.setForeground(new java.awt.Color(204, 0, 51));
        jLabel3.setText("NÃºmero Trabajador:");

        numtra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                numtraFocusLost(evt);
            }
        });
        numtra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numtraKeyTyped(evt);
            }
        });

        jLabel4.setText("RFC Trabajador:");

        jLabel5.setText("CURP Trabajador:");

        jLabel6.setForeground(new java.awt.Color(204, 0, 51));
        jLabel6.setText("Status:");

        jLabel7.setForeground(new java.awt.Color(204, 0, 51));
        jLabel7.setText("Fecha:");

        jLabel8.setText("Paterno:");

        jLabel9.setText("Materno:");

        jLabel10.setText("Nombre:");

        jLabel11.setText("Path Foto:");

        path.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pathFocusLost(evt);
            }
        });

        jLabel12.setForeground(new java.awt.Color(204, 0, 51));
        jLabel12.setText("Fec. Nacim.:");

        jLabel13.setText("Sexo:");

        jLabel14.setText("Nacionalidad:");

        jLabel15.setForeground(new java.awt.Color(204, 0, 51));
        jLabel15.setText("Fecha Ingreso:");

        jLabel16.setForeground(new java.awt.Color(204, 0, 51));
        jLabel16.setText("Fecha Planta:");

        jLabel17.setForeground(new java.awt.Color(204, 0, 51));
        jLabel17.setText("F. Ultimo Cambio:");

        jLabel18.setForeground(new java.awt.Color(204, 0, 51));
        jLabel18.setText("F. Reingreso:");

        jLabel19.setText("Observaciones:");

        jLabel20.setText("Fecha::");

        fecha.setEditable(false);

        jLabel21.setText("Usuario:");

        usuario.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel17)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(rfc, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(curp, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(statra, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fsta, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                    .addComponent(paterno, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(materno, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nombre, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(path, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nacim, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sexo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nacion, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(usuario, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fecha, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(observa, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(fult, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(fing, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fpla, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(frei, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(numtra))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numtra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rfc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(curp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(statra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(fsta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(materno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(nacim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(nacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(fing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(fpla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(fult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(frei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(observa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        datper.setForeground(new java.awt.Color(0, 0, 153));
        datper.setText("Datos Personales");
        datper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datperActionPerformed(evt);
            }
        });

        documenta.setForeground(new java.awt.Color(0, 0, 153));
        documenta.setText("DocumentaciÃ³n");
        documenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                documentaActionPerformed(evt);
            }
        });

        escolar.setForeground(new java.awt.Color(0, 0, 153));
        escolar.setText("Escolaridad");
        escolar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                escolarActionPerformed(evt);
            }
        });

        familiar.setForeground(new java.awt.Color(0, 0, 153));
        familiar.setText("Familiares");
        familiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                familiarActionPerformed(evt);
            }
        });

        exper.setForeground(new java.awt.Color(0, 0, 153));
        exper.setText("Experiencias");
        exper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                experActionPerformed(evt);
            }
        });

        benefi.setForeground(new java.awt.Color(0, 0, 153));
        benefi.setText("Beneficarios");
        benefi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                benefiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(datper)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(documenta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(escolar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(familiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exper)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(benefi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datper)
                    .addComponent(documenta)
                    .addComponent(escolar)
                    .addComponent(familiar)
                    .addComponent(exper)
                    .addComponent(benefi))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        txtImagen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtImagen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        crear.setText("Crear");
        crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearActionPerformed(evt);
            }
        });

        actualizar.setText("Actualizar");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(actualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(crear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(salir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(txtImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(crear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("MOVIMIENTOS DE TRABAJADORES");

        txtEmpresa.setEditable(false);
        txtEmpresa.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtEmpresa.setForeground(new java.awt.Color(204, 0, 0));
        txtEmpresa.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtEmpresa.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtNombre.setEditable(false);
        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txtNombre.setForeground(new java.awt.Color(204, 0, 0));
        txtNombre.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNombre.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(134, 134, 134)
                        .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearActionPerformed
        try{
            Traba e=new Traba();
            int dnumtra=0;
            dnumtra=Integer.parseInt(numtra.getText().toUpperCase());
            System.out.println("Si hay nÃºmero: "+dnumtra);
            if(dnumtra == 0){
                JOptionPane.showMessageDialog(this, "Se requiere un nÃºmero de trabajador, verifique .....");
                Iniciar();
            }
            else{
                String dstatra=statra.getSelectedItem().toString();
                if(dstatra.isEmpty()){
                    JOptionPane.showMessageDialog(this, "Se requiere un status del trabajadore, verifique .....");
                    statra.grabFocus();
                }
                else{
                    if(fsta.getDate() == null){
                        JOptionPane.showMessageDialog(this, "Se requiere la fecha del status del trabajador, verifique .....");
                        fsta.grabFocus();
                    }
                    else{
                        if(nacim.getDate() == null){
                            JOptionPane.showMessageDialog(this, "Se requiere la fecha de nacimiento, verifique .....");
                            nacim.grabFocus();
                        }
                        else{
                            if(fing.getDate() == null){
                                JOptionPane.showMessageDialog(this, "Se requiere la fecha de ingreso, verifique .....");
                                fing.grabFocus();
                            }
                            else{
                                if(fpla.getDate() == null){
                                    JOptionPane.showMessageDialog(this, "Se requiere la fecha de planta, verifique .....");
                                    fpla.grabFocus();
                                }
                                else{
                                    if(fult.getDate() == null){
                                        JOptionPane.showMessageDialog(this, "Se requiere la fecha del Ãºltimo cambio de categorÃ­a, verifique .....");
                                        fult.grabFocus();
                                    }
                                    else{
                                        if(frei.getDate() == null){
                                            JOptionPane.showMessageDialog(this, "Se requiere la fecha del Ãºltimo cambio de categorÃ­a, verifique .....");
                                            frei.grabFocus();
                                        }
                                        else{
                                            String drfc=rfc.getText().toUpperCase();
                                            String dcurp=curp.getText().toUpperCase();
                                            int aÃ±os=fsta.getCalendar().get(Calendar.YEAR);
                                            int mess=fsta.getCalendar().get(Calendar.MONTH)+1;
                                            int dias=fsta.getCalendar().get(Calendar.DAY_OF_MONTH);
                                            String dfsta=(aÃ±os+"/"+mess+"/"+dias);
                                            String dpaterno=paterno.getText().toUpperCase();
                                            String dmaterno=materno.getText().toUpperCase();
                                            String dnombre=nombre.getText().toUpperCase();
                                            String dpath=path.getText().toUpperCase();
                                            int aÃ±o=nacim.getCalendar().get(Calendar.YEAR);
                                            int mes=nacim.getCalendar().get(Calendar.MONTH)+1;
                                            int dia=nacim.getCalendar().get(Calendar.DAY_OF_MONTH);
                                            String dnacim=(aÃ±o+"/"+mes+"/"+dia);
                                            String dsexo=sexo.getSelectedItem().toString();
                                            String dnacion=nacion.getSelectedItem().toString();
                                            int aÃ±oi=fing.getCalendar().get(Calendar.YEAR);
                                            int mesi=fing.getCalendar().get(Calendar.MONTH)+1;
                                            int diai=fing.getCalendar().get(Calendar.DAY_OF_MONTH);
                                            String dfing=(aÃ±oi+"/"+mesi+"/"+diai);
                                            int aÃ±op=fpla.getCalendar().get(Calendar.YEAR);
                                            int mesp=fpla.getCalendar().get(Calendar.MONTH)+1;
                                            int diap=fpla.getCalendar().get(Calendar.DAY_OF_MONTH);
                                            String dfpla=(aÃ±op+"/"+mesp+"/"+diap);
                                            int aÃ±ou=fult.getCalendar().get(Calendar.YEAR);
                                            int mesu=fult.getCalendar().get(Calendar.MONTH)+1;
                                            int diau=fult.getCalendar().get(Calendar.DAY_OF_MONTH);
                                            String dfult=(aÃ±ou+"/"+mesu+"/"+diau);
                                            int aÃ±or=frei.getCalendar().get(Calendar.YEAR);
                                            int mesr=frei.getCalendar().get(Calendar.MONTH)+1;
                                            int diar=frei.getCalendar().get(Calendar.DAY_OF_MONTH);
                                            String dfrei=(aÃ±or+"/"+mesr+"/"+diar);
                                            String dobserva=observa.getText().toUpperCase();
                                            e.Agregar(dnumtra, drfc, dcurp, dstatra, dfsta, dpaterno, dmaterno, dnombre, dpath, dnacim,
                                                      dsexo, dnacion, dfing, dfpla, dfult, dfrei, dobserva, Acceso.getClaveUsuario());
                                            JOptionPane.showMessageDialog(this, "Registro creado .....");
                                            Iniciar(); 
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        catch(NumberFormatException nfe){
            System.out.println("No hay nÃºmero: "+nfe);
        } catch (MalformedURLException ex) {
            Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_crearActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        Traba e=new Traba();
        int dnumtra=0;
        dnumtra=Integer.parseInt(numtra.getText().toUpperCase());
        System.out.println("Si hay nÃºmero: "+dnumtra);
        if(dnumtra == 0){
            JOptionPane.showMessageDialog(this, "Se requiere un nÃºmero de trabajador, verifique .....");
            try {
                Iniciar();
            } catch (MalformedURLException ex) {
                Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            String dstatra=statra.getSelectedItem().toString();
            if(dstatra.isEmpty()){
                JOptionPane.showMessageDialog(this, "Se requiere un status del trabajador, verifique .....");
                statra.grabFocus();
            }
            else{
                if(fsta.getDate() == null){
                    JOptionPane.showMessageDialog(this, "Se requiere la fecha del status del trabajador, verifique .....");
                    fsta.grabFocus();
                }
                else{
                    if(nacim.getDate() == null){
                        JOptionPane.showMessageDialog(this, "Se requiere la fecha de nacimiento, verifique .....");
                        nacim.grabFocus();
                    }
                    else{
                        if(fing.getDate() == null){
                            JOptionPane.showMessageDialog(this, "Se requiere la fecha de ingreso, verifique .....");
                            fing.grabFocus();
                        }
                        else{
                            if(fpla.getDate() == null){
                                JOptionPane.showMessageDialog(this, "Se requiere la fecha de planta, verifique .....");
                                fpla.grabFocus();
                            }
                            else{
                                if(fult.getDate() == null){
                                    JOptionPane.showMessageDialog(this, "Se requiere la fecha del Ãºltimo cambio de categorÃ­a, verifique .....");
                                    fult.grabFocus();
                                }
                                else{
                                    if(frei.getDate() == null){
                                        JOptionPane.showMessageDialog(this, "Se requiere la fecha del Ãºltimo cambio de categorÃ­a, verifique .....");
                                        frei.grabFocus();
                                    }
                                    else{
                                        String drfc=rfc.getText().toUpperCase();
                                        String dcurp=curp.getText().toUpperCase();
                                        int aÃ±os=fsta.getCalendar().get(Calendar.YEAR);
                                        int mess=fsta.getCalendar().get(Calendar.MONTH)+1;
                                        int dias=fsta.getCalendar().get(Calendar.DAY_OF_MONTH);
                                        String dfsta=(aÃ±os+"/"+mess+"/"+dias);
                                        String dpaterno=paterno.getText().toUpperCase();
                                        String dmaterno=materno.getText().toUpperCase();
                                        String dnombre=nombre.getText().toUpperCase();
                                        String dpath=path.getText().toUpperCase();
                                        int aÃ±o=nacim.getCalendar().get(Calendar.YEAR);
                                        int mes=nacim.getCalendar().get(Calendar.MONTH)+1;
                                        int dia=nacim.getCalendar().get(Calendar.DAY_OF_MONTH);
                                        String dnacim=(aÃ±o+"/"+mes+"/"+dia);
                                        String dsexo=sexo.getSelectedItem().toString();
                                        String dnacion=nacion.getSelectedItem().toString();
                                        int aÃ±oi=fing.getCalendar().get(Calendar.YEAR);
                                        int mesi=fing.getCalendar().get(Calendar.MONTH)+1;
                                        int diai=fing.getCalendar().get(Calendar.DAY_OF_MONTH);
                                        String dfing=(aÃ±oi+"/"+mesi+"/"+diai);
                                        int aÃ±op=fpla.getCalendar().get(Calendar.YEAR);
                                        int mesp=fpla.getCalendar().get(Calendar.MONTH)+1;
                                        int diap=fpla.getCalendar().get(Calendar.DAY_OF_MONTH);
                                        String dfpla=(aÃ±op+"/"+mesp+"/"+diap);
                                        int aÃ±ou=fult.getCalendar().get(Calendar.YEAR);
                                        int mesu=fult.getCalendar().get(Calendar.MONTH)+1;
                                        int diau=fult.getCalendar().get(Calendar.DAY_OF_MONTH);
                                        String dfult=(aÃ±ou+"/"+mesu+"/"+diau);
                                        int aÃ±or=frei.getCalendar().get(Calendar.YEAR);
                                        int mesr=frei.getCalendar().get(Calendar.MONTH)+1;
                                        int diar=frei.getCalendar().get(Calendar.DAY_OF_MONTH);
                                        String dfrei=(aÃ±or+"/"+mesr+"/"+diar);
                                        String dobserva=observa.getText().toUpperCase();
                                        e.Actualizar(dnumtra, drfc, dcurp, dstatra, dfsta, dpaterno, dmaterno, dnombre, dpath, dnacim,
                                                     dsexo, dnacion, dfing, dfpla, dfult, dfrei, dobserva, Acceso.getClaveUsuario());
                                        JOptionPane.showMessageDialog(this, "Registro actualizado .....");
                                        try { 
                                            Iniciar();
                                        } catch (MalformedURLException ex) {
                                            Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_actualizarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        Traba e01=new Traba();
        int dnumtra=Integer.parseInt(numtra.getText().toUpperCase());
        int ax = JOptionPane.showConfirmDialog(null, "Este proceso eliminarÃ¡ toda la informaciÃ³n del trabajador de todo el sistema SIRH. \nDesea Continuar ?");
        if(ax == JOptionPane.YES_OPTION){
            e01.Eliminar01(dnumtra, Acceso.getClaveUsuario());
            Traba e02=new Traba();
            e02.Eliminar02(dnumtra, Acceso.getClaveUsuario());
            Traba e03=new Traba();
            e03.Eliminar03(dnumtra, Acceso.getClaveUsuario());
            Traba e04=new Traba();
            e04.Eliminar04(dnumtra, Acceso.getClaveUsuario());
            Traba e05=new Traba();
            e05.Eliminar05(dnumtra, Acceso.getClaveUsuario());
            Traba e06=new Traba();
            e06.Eliminar06(dnumtra, Acceso.getClaveUsuario());
            Traba e07=new Traba();
            e07.Eliminar07(dnumtra, Acceso.getClaveUsuario());
            Traba e08=new Traba();
            e08.Eliminar08(dnumtra, Acceso.getClaveUsuario());
            Traba e09=new Traba();
            e09.Eliminar09(dnumtra, Acceso.getClaveUsuario());
            Traba e10=new Traba();
            e10.Eliminar10(dnumtra, Acceso.getClaveUsuario());
            Traba e11=new Traba();
            e11.Eliminar11(dnumtra, Acceso.getClaveUsuario());
            JOptionPane.showMessageDialog(this, "Trabajador eliminado .....");
            try {
                Iniciar();
            } catch (MalformedURLException ex) {
                Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(ax == JOptionPane.NO_OPTION){
            try {
                Iniciar();
            } catch (MalformedURLException ex) {
                Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        try {
            Iniciar();
        } catch (MalformedURLException ex) {
            Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cancelarActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        this.dispose();
    }//GEN-LAST:event_salirActionPerformed

    private void pathFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pathFocusLost
        try {
            String lugarImagen="";
            lugarImagen=path.getText();
            Image icon;
            
            icon = new javax.swing.ImageIcon(new URL(lugarImagen)).getImage().getScaledInstance(txtImagen.getWidth(), txtImagen.getWidth(), Image.SCALE_DEFAULT);
            Icon imagen=new ImageIcon(icon);
            txtImagen.setIcon(imagen);
        } catch (MalformedURLException ex) {
            Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pathFocusLost

    private void numtraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numtraFocusLost
        try{
            int dnumtra=0;
            dnumtra=Integer.parseInt(numtra.getText().toUpperCase());
            System.out.println("Si hay nÃºmero: "+dnumtra);
            if(dnumtra == 0){
                JOptionPane.showMessageDialog(this, "Necesita proporcionar un nÃºmero de trabajador vÃ¡lido, verifique .....");
                numtra.grabFocus();
            }
            else{
                Traba val= new Traba();
                Object[] datos=val.Datos(dnumtra);
                String checa=datos[0]+"";
                Traba.setNumTrabaja(Integer.parseInt(numtra.getText()));
    
                if(checa.trim().equals("null")){
                    JOptionPane.showMessageDialog(this, "Este nÃºmero de trabajador no existe .....");
                }
                else{
                    numtra.setText(datos[0]+"");
                    rfc.setText(datos[1]+"");
                    curp.setText(datos[2]+"");
                    statra.setSelectedItem(datos[3]+"");
                    String fstatu = datos[4]+"";
                    SimpleDateFormat formatofecha1=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    try{
                        Date fecha1 = formatofecha1.parse(fstatu);
                        fsta.setDate(fecha1);
                    }
                    catch(ParseException pe1){
                        System.out.println("Error Parse1: "+pe1.getMessage());
                    }
                    paterno.setText(datos[5]+"");
                    materno.setText(datos[6]+"");
                    nombre.setText(datos[7]+"");
                    Traba.setNomTrabaja(nombre.getText()+" "+paterno.getText()+" "+materno.getText());
                    path.setText(datos[8]+"");
                    String fnacim = datos[9]+"";
                    SimpleDateFormat formatofecha2=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    try{
                        Date fecha2 = formatofecha2.parse(fnacim);
                        nacim.setDate(fecha2);
                    }
                    catch(ParseException pe1){
                        System.out.println("Error Parse2: "+pe1.getMessage());
                    }
                    sexo.setSelectedItem(datos[10]+"");
                    nacion.setSelectedItem(datos[11]+"");
                    String fecing = datos[12]+"";
                    SimpleDateFormat formatofecha3=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    try{
                        Date fecha3 = formatofecha3.parse(fecing);
                        fing.setDate(fecha3);
                    }
                    catch(ParseException pe1){
                        System.out.println("Error Parse3: "+pe1.getMessage());
                    }
                    String fecpla = datos[13]+"";
                    SimpleDateFormat formatofecha4=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    try{
                        Date fecha4 = formatofecha4.parse(fecpla);
                        fpla.setDate(fecha4);
                    }
                    catch(ParseException pe1){
                        System.out.println("Error Parse4: "+pe1.getMessage());
                    }
                    String fecult = datos[14]+"";
                    SimpleDateFormat formatofecha5=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    try{
                        Date fecha5 = formatofecha5.parse(fecult);
                        fult.setDate(fecha5);
                    }
                    catch(ParseException pe1){
                        System.out.println("Error Parse5: "+pe1.getMessage());
                    }
                    String fecrei = datos[15]+"";
                    SimpleDateFormat formatofecha6=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    try{
                        Date fecha6 = formatofecha6.parse(fecrei);
                        frei.setDate(fecha6);
                    }
                    catch(ParseException pe1){
                        System.out.println("Error Parse6: "+pe1.getMessage());
                    }
                    observa.setText(datos[16]+"");
                    String freg = datos[17]+"";
                    fecha.setText(freg);
                    usuario.setText(datos[18]+"");
                    String lugarImagen="";
                    lugarImagen=path.getText();
                    Image icon=new javax.swing.ImageIcon(new URL(lugarImagen)).getImage().getScaledInstance(txtImagen.getWidth(), txtImagen.getWidth(), Image.SCALE_DEFAULT);
                    Icon imagen=new ImageIcon(icon);
                    txtImagen.setIcon(imagen);
                    crear.setEnabled(false);
                    numtra.setEnabled(false);
                    rfc.grabFocus();
                }
            }
        }
        catch(NumberFormatException nfe){
            System.out.println("No hay nÃºmero: "+nfe);
        } catch (MalformedURLException ex) {
            Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_numtraFocusLost

    private void datperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datperActionPerformed
        try{
            int dnumtra=0;
            dnumtra=Integer.parseInt(numtra.getText().toUpperCase());
            System.out.println("Si hay nÃºmero: "+dnumtra);
            if(dnumtra == 0){
                JOptionPane.showMessageDialog(this, "Necesita proporcionar un nÃºmero de trabajador vÃ¡lido, verifique .....");
                Iniciar();
            }
            else{
                DatosConsola object=new DatosConsola();
                object.setLocationRelativeTo(null);
                object.setVisible(true);
                }   
        }
        catch(NumberFormatException nfe){
            System.out.println("No hay nÃºmero: "+nfe);
        } catch (MalformedURLException ex) {
            Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_datperActionPerformed

    private void documentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_documentaActionPerformed
        try{
            int dnumtra=0;
            dnumtra=Integer.parseInt(numtra.getText().toUpperCase());
            System.out.println("Si hay nÃºmero: "+dnumtra);
            if(dnumtra == 0){
                JOptionPane.showMessageDialog(this, "Necesita proporcionar un nÃºmero de trabajador vÃ¡lido, verifique .....");
                Iniciar();
            }
            else{
                DocumConsola object=new DocumConsola();
                object.setLocationRelativeTo(null);
                object.setVisible(true);
                }   
        }
        catch(NumberFormatException nfe){
            System.out.println("No hay nÃºmero: "+nfe);
        } catch (MalformedURLException ex) {
            Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_documentaActionPerformed

    private void escolarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_escolarActionPerformed
        try{
            int dnumtra=0;
            dnumtra=Integer.parseInt(numtra.getText().toUpperCase());
            System.out.println("Si hay nÃºmero: "+dnumtra);
            if(dnumtra == 0){
                JOptionPane.showMessageDialog(this, "Necesita proporcionar un nÃºmero de trabajador vÃ¡lido, verifique .....");
                Iniciar();
            }
            else{
                EscolConsola object=new EscolConsola();
                object.setLocationRelativeTo(null);
                object.setVisible(true);
                }   
        }
        catch(NumberFormatException nfe){
            System.out.println("No hay nÃºmero: "+nfe);
        } catch (MalformedURLException ex) {
            Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_escolarActionPerformed

    private void familiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_familiarActionPerformed
        try{
            int dnumtra=0;
            dnumtra=Integer.parseInt(numtra.getText().toUpperCase());
            System.out.println("Si hay nÃºmero: "+dnumtra);
            if(dnumtra == 0){
                JOptionPane.showMessageDialog(this, "Necesita proporcionar un nÃºmero de trabajador vÃ¡lido, verifique .....");
                Iniciar();
            }
            else{
                FamilConsola object=new FamilConsola();
                object.setLocationRelativeTo(null);
                object.setVisible(true);
                }   
        }
        catch(NumberFormatException nfe){
            System.out.println("No hay nÃºmero: "+nfe);
        } catch (MalformedURLException ex) {
            Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_familiarActionPerformed

    private void experActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_experActionPerformed
        try{
            int dnumtra=0;
            dnumtra=Integer.parseInt(numtra.getText().toUpperCase());
            System.out.println("Si hay nÃºmero: "+dnumtra);
            if(dnumtra == 0){
                JOptionPane.showMessageDialog(this, "Necesita proporcionar un nÃºmero de trabajador vÃ¡lido, verifique .....");
                Iniciar();
            }
            else{
                ExperConsola object=new ExperConsola();
                object.setLocationRelativeTo(null);
                object.setVisible(true);
                }   
        }
        catch(NumberFormatException nfe){
            System.out.println("No hay nÃºmero: "+nfe);
        } catch (MalformedURLException ex) {
            Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_experActionPerformed

    private void benefiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_benefiActionPerformed
        try{
            int dnumtra=0;
            dnumtra=Integer.parseInt(numtra.getText().toUpperCase());
            System.out.println("Si hay nÃºmero: "+dnumtra);
            if(dnumtra == 0){
                JOptionPane.showMessageDialog(this, "Necesita proporcionar un nÃºmero de trabajador vÃ¡lido, verifique .....");
                Iniciar();
            }
            else{
                BenefConsola object=new BenefConsola();
                object.setLocationRelativeTo(null);
                object.setVisible(true);
                }   
        }
        catch(NumberFormatException nfe){
            System.out.println("No hay nÃºmero: "+nfe);
        } catch (MalformedURLException ex) {
            Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_benefiActionPerformed

    private void numtraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numtraKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9'))
        {
            evt.consume();
        }
    }//GEN-LAST:event_numtraKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TrabaConsola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TrabaConsola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TrabaConsola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);  
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TrabaConsola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TrabaConsola().setVisible(true);
                } catch (MalformedURLException ex) {
                    Logger.getLogger(TrabaConsola.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JButton benefi;
    private javax.swing.JButton cancelar;
    private javax.swing.JButton crear;
    private javax.swing.JTextField curp;
    private javax.swing.JButton datper;
    private javax.swing.JButton documenta;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton escolar;
    private javax.swing.JButton exper;
    private javax.swing.JButton familiar;
    private javax.swing.JTextField fecha;
    private com.toedter.calendar.JDateChooser fing;
    private com.toedter.calendar.JDateChooser fpla;
    private com.toedter.calendar.JDateChooser frei;
    private com.toedter.calendar.JDateChooser fsta;
    private com.toedter.calendar.JDateChooser fult;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField materno;
    private com.toedter.calendar.JDateChooser nacim;
    private javax.swing.JComboBox nacion;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField numtra;
    private javax.swing.JTextField observa;
    private javax.swing.JTextField paterno;
    private javax.swing.JTextField path;
    private javax.swing.JTextField rfc;
    private javax.swing.JButton salir;
    private javax.swing.JComboBox sexo;
    private javax.swing.JComboBox statra;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JLabel txtImagen;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField usuario;
    // End of variables declaration//GEN-END:variables
}
